from collections import Counter


class Solution:
    def reorderedPowerOf2(self, N):
        m = {
            (0, 1, 0, 0, 0, 0, 0, 0, 0, 0),
            (0, 0, 1, 0, 0, 0, 0, 0, 0, 0),
            (0, 0, 0, 0, 1, 0, 0, 0, 0, 0),
            (0, 0, 0, 0, 0, 0, 0, 0, 1, 0),
            (0, 1, 0, 0, 0, 0, 1, 0, 0, 0),
            (0, 0, 1, 1, 0, 0, 0, 0, 0, 0),
            (0, 0, 0, 0, 1, 0, 1, 0, 0, 0),
            (0, 1, 1, 0, 0, 0, 0, 0, 1, 0),
            (0, 0, 1, 0, 0, 1, 1, 0, 0, 0),
            (0, 1, 1, 0, 0, 1, 0, 0, 0, 0),
            (1, 1, 1, 0, 1, 0, 0, 0, 0, 0),
            (1, 0, 1, 0, 1, 0, 0, 0, 1, 0),
            (1, 0, 0, 0, 1, 0, 1, 0, 0, 1),
            (0, 1, 1, 0, 0, 0, 0, 0, 1, 1),
            (0, 1, 0, 1, 1, 0, 1, 0, 1, 0),
            (0, 0, 1, 1, 0, 0, 1, 1, 1, 0),
            (0, 0, 0, 1, 0, 2, 2, 0, 0, 0),
            (1, 2, 1, 1, 0, 0, 0, 1, 0, 0),
            (0, 1, 2, 0, 2, 0, 1, 0, 0, 0),
            (0, 0, 2, 0, 1, 1, 0, 0, 2, 0),
            (1, 1, 0, 0, 1, 1, 1, 1, 1, 0),
            (1, 1, 2, 0, 0, 1, 0, 1, 0, 1),
            (1, 1, 0, 1, 3, 0, 0, 0, 0, 1),
            (1, 0, 0, 1, 0, 0, 1, 0, 4, 0),
            (0, 2, 1, 0, 0, 0, 2, 3, 0, 0),
            (0, 0, 1, 3, 2, 2, 0, 0, 0, 0),
            (1, 1, 0, 0, 1, 0, 2, 1, 2, 0),
            (0, 2, 2, 1, 1, 0, 0, 2, 1, 0),
            (0, 0, 1, 1, 2, 2, 2, 0, 1, 0),
            (1, 1, 1, 1, 0, 1, 1, 1, 1, 1),
            (1, 2, 1, 1, 2, 0, 0, 2, 1, 0),
        }
        c = Counter(str(N))
        return tuple(c[k] for k in "0123456789") in m


if __name__ == "__main__":
    solution = Solution()
    print(solution.reorderedPowerOf2(1))
    print(solution.reorderedPowerOf2(10))
    print(solution.reorderedPowerOf2(16))
    print(solution.reorderedPowerOf2(24))
    print(solution.reorderedPowerOf2(46))
